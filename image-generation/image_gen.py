import streamlit as st
import os
from dotenv import load_dotenv
import openai
from diffusers import StableDiffusionPipeline
import torch

load_dotenv()

openai.api_key = os.getenv("OPEN_API_KEY")

def generate_image_using_openai(input_prompt):
    response = openai.Image.create(
        prompt = input_prompt,
        n = 1,
        size="512x512"
    )
    image_url = response['data'][0]['url']
    return image_url

def generate_image_using_huggingface_diffusers(input_prompt, number_of_images):
    pipe = StableDiffusionPipeline.from_pretrained("runwayml/stable-diffusion-v1-5", torch_dtype=torch.float16)
    pipe.safety_checker = lambda images, clip_input: (images, False)
    pipe = pipe.to("cuda")
    prompt = [input_prompt] * number_of_images
    images = pipe(prompt, width=512, height=512).images
    return images

choice = st.sidebar.selectbox("Select your choice", ["Home", "DALL-E", "HuggingFace Diffusers"])

if choice == "Home":
    st.title ("AI Image Generation App")
    with st.expander("About the app"):
        st.write("This app is a tool to generate images using DALL-E and HuggingFace Diffusers")

elif choice == "DALL-E":
    st.subheader("Image Generation using DALL-E")
    input_prompt = st.text_input("Enter your prompt")
    if input_prompt is not None:
        if st.button("Generate image"):
            image_url = generate_image_using_openai(input_prompt)
            st.image(image_url, caption="Image generated by DALL-E")

elif choice == "HuggingFace Diffusers":
    st.subheader("Image Generation using HuggingFace Diffusers. Requires NVidia GPU and Cuda")
    input_prompt = st.text_input("Enter your prompt")
    if input_prompt is not None:
        if st.button("Generate image"):
            images = generate_image_using_huggingface_diffusers(input_prompt, 1)
            st.image(images[0])